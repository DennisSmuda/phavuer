{"version":3,"file":"phavuer.es.js","sources":["../src/setters.js","../src/components/Game.vue","../src/components/Scene.vue","../src/props.js","../src/emits.js","../src/components/Container.vue","../src/components/Rectangle.vue","../src/components/RoundRectangle.vue","../src/components/Triangle.vue","../src/components/Circle.vue","../src/components/Polygon.vue","../src/components/Line.vue","../src/components/Image.vue","../src/components/NineSlice.vue","../src/components/Sprite.vue","../src/components/Text.vue","../src/components/TilemapLayer.vue","../src/components/Zone.vue","../src/components/Light.vue","../src/components/StaticBody.vue","../src/components/Body.vue","../src/components/RenderTexture.vue","../src/index.js"],"sourcesContent":["export const GAME_OBJECT_EVENTS = [\n  { attr: 'onPointerdown', emit: 'pointerdown', eventIndex: 3 },\n  { attr: 'onPointermove', emit: 'pointermove', eventIndex: 3 },\n  { attr: 'onPointerup', emit: 'pointerup', eventIndex: 3 },\n  { attr: 'onPointerout', emit: 'pointerout', eventIndex: 1 },\n  { attr: 'onPointerover', emit: 'pointerover', eventIndex: 3 },\n  { attr: 'onWheel', emit: 'wheel', eventIndex: 4 },\n  { attr: 'onDragstart', emit: 'dragstart', drag: true },\n  { attr: 'onDrag', emit: 'drag', drag: true },\n  { attr: 'onDragend', emit: 'dragend', drag: true },\n  { attr: 'onDragenter', emit: 'dragenter', drag: true },\n  { attr: 'onDragover', emit: 'dragover', drag: true },\n  { attr: 'onDragleave', emit: 'dragleave', drag: true },\n  { attr: 'onDrop', emit: 'drop', drag: true }\n]\nconst fixSize = object => {\n  if (object.updateDisplayOrigin) {\n    object.updateDisplayOrigin()\n  }\n  if (object.input) {\n    object.input.hitArea.setSize(object.width, object.height)\n  } else if (object._events && GAME_OBJECT_EVENTS.some(v => v.emit in object._events)) {\n    object.setInteractive()\n  }\n}\n\nconst defineVModelProperty = (gameObject, key, emit) => {\n  let rawValue = gameObject[key]\n  Object.defineProperty(gameObject, key, {\n    get () {\n      return rawValue\n    },\n    set (v) {\n      if (rawValue !== v) emit(`update:${key}`, v)\n    }\n  })\n  return v => rawValue = v\n}\n\nexport const deepProps = ['tween', 'tweens', 'timeline', 'style']\nexport const vModelProps = ['x', 'y', 'tweens', 'tween', 'timeline']\nexport default {\n  active: object => v => object.setActive(v),\n  visible: object => v => object.setVisible(v),\n  x: (object, emit) => {\n    if (emit) {\n      return defineVModelProperty(object, 'x', emit)\n    } else {\n      return v => object.x = v\n    }\n  },\n  y: (object, emit) => {\n    if (emit) {\n      return defineVModelProperty(object, 'y', emit)\n    } else {\n      return v => object.y = v\n    }\n  },\n  x1: object => v => object.geom.x1 = v,\n  y1: object => v => object.geom.y1 = v,\n  x2: object => v => object.geom.x2 = v,\n  y2: object => v => object.geom.y2 = v,\n  x3: object => v => object.geom.x3 = v,\n  y3: object => v => object.geom.y3 = v,\n  points: object => v => object.setTo(v),\n  rotation: object => v => object.setRotation(v),\n  origin: object => v => object.setOrigin(v, v),\n  originX: object => v => object.setOrigin(v, object.originY),\n  originY: object => v => object.setOrigin(object.originX, v),\n  scale: object => v => object.setScale(v, v),\n  scaleX: object => v => object.setScale(v, object.scaleY),\n  scaleY: object => v => object.setScale(object.scaleX, v),\n  width: object => v => {\n    object.setSize(v, object.height)\n    fixSize(object)\n  },\n  height: object => v => {\n    object.setSize(object.width, v)\n    fixSize(object)\n  },\n  leftWidth: object => v => object.setSlices(object.width, object.height, v, object.rightWidth, object.topHeight, object.bottomHeight),\n  rightWidth: object => v => object.setSlices(object.width, object.height, object.leftWidth, v, object.topHeight, object.bottomHeight),\n  topHeight: object => v => object.setSlices(object.width, object.height, object.leftWidth, object.rightWidth, v, object.bottomHeight),\n  bottomHeight: object => v => object.setSlices(object.width, object.height, object.leftWidth, object.rightWidth, object.topHeight, v),\n  radius: object => v => object.setRadius(v),\n  displayWidth: object => v => object.setDisplaySize(v, object.displayHeight),\n  displayHeight: object => v => object.setDisplaySize(object.displayWidth, v),\n  displayOriginX: object => v => object.setDisplayOrigin(v, object.displayOriginY),\n  displayOriginY: object => v => object.setDisplayOrigin(object.displayOriginX, v),\n  dropZone: object => v => {\n    if (!v) return\n    if (!object.input) object.setInteractive()\n    object.input.dropZone = v\n  },\n  flipX: object => v => object.setFlipX(v),\n  flipY: object => v => object.setFlipY(v),\n  depth: object => v => {\n    object.setDepth(v)\n    if (object.parentContainer) {\n      const i = object.parentContainer.list.findIndex(v => v.depth > (object.depth ?? 0))\n      i === -1 ? object.parentContainer.bringToTop(object) : object.parentContainer.moveTo(object, Math.max(i - 1, 0))\n    }\n  },\n  alpha: object => v => object.setAlpha(v),\n  blendMode: object => v => object.setBlendMode(v),\n  pipeline: object => v => object.setPipeline(v),\n  intensity: object => v => object.setIntensity(v),\n  tint: object => v => object.setTint(v),\n  text: object => v => object.setText(v),\n  texture: object => v => object.setTexture(v, object.frame && object.frame.name),\n  frame: object => v => object.setFrame(v),\n  color: object => v => object.setColor(v),\n  fillColor: object => v => object.setFillStyle(v, object.fillAlpha),\n  fillAlpha: object => v => object.setFillStyle(object.fillColor, v),\n  lineWidth: object => (start, end) => {\n    if (object.setLineWidth) {\n      object.setLineWidth(start, end)\n    } else {\n      object.setStrokeStyle(...(!start ? [] : [start, object.strokeColor, object.strokeAlpha]))\n    }\n  },\n  strokeColor: object => v => object.setStrokeStyle(object.lineWidth, v, object.strokeAlpha),\n  strokeAlpha: object => v => object.setStrokeStyle(object.lineWidth, object.strokeColor, v),\n  style: object => v => object.setStyle(v),\n  lineSpacing: object => v => object.setLineSpacing(v),\n  padding: object => v => object.setPadding(v),\n  collision: object => v => object.setCollision(v),\n  collisionByProperty: object => v => object.setCollisionByProperty(v),\n  play: object => v => v ? object.play(v) : object.stop(),\n  scrollFactor: object => v => object.setScrollFactor(v),\n  scrollFactorX: object => v => object.setScrollFactor(v, object.scrollFactorY),\n  scrollFactorY: object => v => object.setScrollFactor(object.scrollFactorX, v),\n  cullPadding: object => v => object.setCullPadding(v, v),\n  cullPaddingX: object => v => object.setCullPadding(v, object.cullPaddingY),\n  cullPaddingY: object => v => object.setCullPadding(object.cullPaddingX, v),\n  // Body\n  enable: body => v => body.enable = v,\n  immovable: body => v => body.setImmovable(v),\n  moves: body => v => body.moves = v,\n  bounceX: body => v => body.setBounceX(v),\n  bounceY: body => v => body.setBounceY(v),\n  drag: body => v => body.setDrag(v),\n  dragX: body => v => body.setDragX(v),\n  dragY: body => v => body.setDragY(v),\n  gravityX: body => v => body.setGravityX(v),\n  gravityY: body => v => body.setGravityY(v),\n  frictionX: body => v => body.setFrictionX(v),\n  frictionY: body => v => body.setFrictionY(v),\n  velocityX: body => v => body.setVelocityX(v),\n  velocityY: body => v => body.setVelocityY(v),\n  maxVelocityX: body => v => body.setMaxVelocityX(v),\n  maxVelocityY: body => v => body.setMaxVelocityY(v),\n  accelerationX: body => v => body.setAccelerationX(v),\n  accelerationY: body => v => body.setAccelerationY(v),\n  offsetX: body => v => body.setOffset(v, body.offset.y),\n  offsetY: body => v => body.setOffset(body.offset.x, v),\n  collideWorldBounds: body => v => body.collideWorldBounds = v,\n  // Tween\n  tween: (object, emit) => {\n    return makeTweenRepository(tweenConfig => {\n      const tween = object.scene.add.tween(Object.assign({ targets: object }, tweenConfig))\n      if (emit, emit) tween.on('complete', () => emit('update:tween', undefined))\n      return tween\n    })\n  },\n  tweens: (object, emit) => {\n    return makeTweenRepository(tweenConfigs => {\n      const infinitConfigIndex = tweenConfigs.findIndex(conf => conf.repeat === -1)\n      const configs = tweenConfigs.slice(0, infinitConfigIndex === -1 ? undefined : infinitConfigIndex + 1)\n      const timeline = object.scene.add.timeline(configs.map((tweenConfig, i) => {\n        const at = configs.slice(0, i).reduce((sum, config) => {\n          const duration = config.duration ?? 1000\n          const yoyo = config.yoyo ?? false\n          const count = (config.repeat ?? 0) + 1\n          return sum + duration * (yoyo ? 2 : 1) * count\n        }, 0)\n        return {\n          at,\n          tween: Object.assign({ targets: object }, tweenConfig)\n        }\n      })).play()\n      if (emit) timeline.on('complete', () => emit('update:tweens', undefined))\n      return timeline\n    })\n  },\n  timeline: (object, emit) => {\n    return makeTweenRepository(timelineConfigs => {\n      const timeline = object.scene.add.timeline(timelineConfigs.map(timelineConfig => {\n        const copiedTimelineConfig = Object.assign({}, timelineConfig)\n        if (copiedTimelineConfig.tween) {\n          copiedTimelineConfig.tween = Object.assign({ targets: object }, copiedTimelineConfig.tween)\n        }\n        return copiedTimelineConfig\n      })).play()\n      if (emit) timeline.on('complete', () => emit('update:timeline', undefined))\n      return timeline\n    })\n  }\n}\nconst makeTweenRepository = (callback) => {\n  let prevTween = undefined\n  return (data) => {\n    if (prevTween) prevTween.stop()\n    prevTween = data ? callback(data) : undefined\n  }\n}\n","<template>\n  <div data-phavuer-game>\n    <div data-phavuer-canvas ref=\"canvasRoot\" />\n    <slot v-if=\"show\" />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, provide, ref, onMounted } from 'vue'\nimport { InjectionKeys } from '../index'\nimport packageJson from '../../package.json'\nexport default defineComponent({\n  emits: ['create', 'ready'],\n  props: {\n    config: { type: Object }\n  },\n  setup (props, context) {\n    if (props.config?.banner !== false) {\n      console.log(\n        `%c %cPhavuer v${packageJson.version}%c https://github.com/laineus/phavuer`,\n        'background-color: #42b883; padding: 2px 0;',\n        'background-color: #213547; padding: 2px 8px; color: white; font-weight: bold;',\n        ''\n      )\n    }\n    const canvasRoot = ref(false)\n    const show = ref(false)\n    const tmpParent = document.createElement('div')\n    const game = new Phaser.Game(Object.assign({ parent: tmpParent }, props.config))\n    provide(InjectionKeys.Game, game)\n    provide(InjectionKeys.Scene, undefined)\n    provide(InjectionKeys.Container, undefined)\n    provide(InjectionKeys.RenderTextureRenderList, undefined)\n    game.events.addListener('ready', () => {\n      show.value = true\n      context.emit('ready', game)\n    })\n    context.emit('create', game)\n    onMounted(() => {\n      // May be null if parent is overwritten in props.config\n      const canvas = tmpParent.firstChild\n      if (canvas) {\n        canvasRoot.value.appendChild(canvas)\n        game.scale.getParent({ ...game.config, parent: canvasRoot.value })\n        game.scale.refresh()\n      }\n    })\n    return { canvasRoot, show }\n  }\n})\n</script>\n","<template>\n  <slot v-if=\"show\" />\n</template>\n\n<script>\nimport { defineComponent, provide, inject, ref } from 'vue'\nimport { InjectionKeys } from '../index'\nexport default defineComponent({\n  emits: ['init', 'create', 'update', 'preload'],\n  props: {\n    name: { type: String, required: true },\n    autoStart: { type: Boolean, default: true }\n  },\n  setup (props, context) {\n    const show = ref(false)\n    const preUpdateEvents = []\n    const postUpdateEvents = []\n    const Scene = class extends Phaser.Scene {\n      init (data) {\n        context.emit('init', this, data)\n      }\n      create (data) {\n        show.value = true\n        context.emit('create', this, data)\n      }\n      update (time, delta) {\n        preUpdateEvents.forEach(e => e(time, delta))\n        context.emit('update', this, time, delta)\n        postUpdateEvents.forEach(e => e(time, delta))\n      }\n      preload () {\n        context.emit('preload', this)\n      }\n    }\n    const game = inject(InjectionKeys.Game)\n    const scene = game.scene.add(props.name, Scene, props.autoStart)\n    scene.events.on('shutdown', () => show.value = false)\n    provide(InjectionKeys.Scene, scene)\n    provide(InjectionKeys.PreUpdateEvents, preUpdateEvents)\n    provide(InjectionKeys.PostUpdateEvents, postUpdateEvents)\n    return { scene, show }\n  }\n})\n</script>\n","const props = {\n  active: { type: Boolean },\n  visible: { type: Boolean },\n  x: { type: Number },\n  y: { type: Number },\n  x1: { type: Number },\n  y1: { type: Number },\n  x2: { type: Number },\n  y2: { type: Number },\n  x3: { type: Number },\n  y3: { type: Number },\n  points: { type: Array },\n  rotation: { type: Number },\n  origin: { type: Number },\n  originX: { type: Number },\n  originY: { type: Number },\n  scale: { type: Number },\n  scaleX: { type: Number },\n  scaleY: { type: Number },\n  width: { type: Number },\n  height: { type: Number },\n  leftWidth: { type: Number },\n  rightWidth: { type: Number },\n  topHeight: { type: Number },\n  bottomHeight: { type: Number },\n  radius: { type: Number },\n  displayWidth: { type: Number },\n  displayHeight: { type: Number },\n  displayOriginX: { type: Number },\n  displayOriginY: { type: Number },\n  dropZone: { type: Boolean },\n  flipX: { type: Boolean },\n  flipY: { type: Boolean },\n  depth: { type: Number },\n  alpha: { type: Number },\n  blendMode: { type: [Number, String] },\n  pipeline: { type: [String, Object] },\n  intensity: { type: Number },\n  tint: { type: Number },\n  text: { type: [String, Number] },\n  texture: { type: String },\n  frame: { type: [Number, String] },\n  color: { type: String },\n  fillColor: { type: Number },\n  fillAlpha: { type: Number },\n  lineWidth: { type: Number },\n  strokeColor: { type: Number },\n  strokeAlpha: { type: Number },\n  style: { type: Object },\n  lineSpacing: { type: Number },\n  padding: { type: [Number, Object] },\n  collision: { type: [Number, Array] },\n  collisionByProperty: { type: Object },\n  play: { type: [String, Object] },\n  scrollFactor: { type: Number },\n  scrollFactorX: { type: Number },\n  scrollFactorY: { type: Number },\n  // Body\n  enable: { type: Boolean },\n  immovable: { type: Boolean },\n  moves: { type: Boolean },\n  bounceX: { type: Number },\n  bounceY: { type: Number },\n  drag: { type: Number },\n  dragX: { type: Number },\n  dragY: { type: Number },\n  gravityX: { type: Number },\n  gravityY: { type: Number },\n  frictionX: { type: Number },\n  frictionY: { type: Number },\n  velocityX: { type: Number },\n  velocityY: { type: Number },\n  maxVelocityX: { type: Number },\n  maxVelocityY: { type: Number },\n  accelerationX: { type: Number },\n  accelerationY: { type: Number },\n  offsetX: { type: Number },\n  offsetY: { type: Number },\n  collideWorldBounds: { type: Boolean },\n  // Tween\n  tween: { type: Object },\n  tweens: { type: Array },\n  timeline: { type: Object }\n}\nconst propsEntries = Object.entries(props)\nexport const mapProps = (...names) => {\n  const nameSet = new Set(names)\n  return Object.fromEntries(\n    propsEntries.filter(([name]) => nameSet.has(name))\n  )\n}\nexport const gameObjectProps = mapProps(\n  'tween', 'tweens', 'timeline',\n  'active', 'visible',\n  'x', 'y',\n  'rotation',\n  'origin', 'originX', 'originY',\n  'displayOriginX', 'displayOriginY',\n  'scale', 'scaleX', 'scaleY',\n  'displayWidth', 'displayHeight',\n  'scrollFactor', 'scrollFactorX', 'scrollFactorY',\n  'dropZone',\n  'depth',\n  'alpha', 'blendMode', 'pipeline'\n)\n","import { GAME_OBJECT_EVENTS, vModelProps } from './setters.js'\nconst emits = GAME_OBJECT_EVENTS.map(v => v.emit)\nconst vModelEmits = vModelProps.map(key => `update:${key}`)\nexport const gameObjectEmits = ['create', ...emits, ...vModelEmits]\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: Object.fromEntries(\n    Object.entries(gameObjectProps).filter(([k]) => !['origin', 'originX', 'originY', 'displayOriginX', 'displayOriginY'].includes(k))\n  ),\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Container(scene, props.x || 0, props.y || 0)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.Container, object)\n    provide(InjectionKeys.GameObject, object)\n    provide(InjectionKeys.RenderTextureRenderList, undefined)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'width', 'height',\n      'fillColor', 'fillAlpha',\n      'lineWidth', 'strokeColor', 'strokeAlpha'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Rectangle(scene, props.x || 0, props.y || 0, props.width, props.height)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'width', 'height',\n      'radius',\n      'fillColor', 'fillAlpha',\n      'lineWidth', 'strokeColor', 'strokeAlpha'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    class RoundRectangle extends Phaser.GameObjects.Graphics {\n      constructor (scene, x, y, width, height, radius) {\n        super(scene, x, y, width, height)\n        this._originX = 0\n        this._originY = 0\n        this._width = width || 0\n        this._height = height || 0\n        this._radius = radius || 0\n        this._fillColor = null\n        this._fillAlpha = 1\n        this._lineWidth = 0\n        this._strokeColor = null\n        this._strokeAlpha = 1\n        this.setRenderFlag(true)\n      }\n      preUpdate (...arg) {\n        if (this.renderFlag) this.render()\n      }\n      setRenderFlag (bool) {\n        this.renderFlag = bool\n      }\n      render () {\n        this.setRenderFlag(false)\n        const x = this.originX * -this.width\n        const y = this.originY * -this.height\n        const radius = typeof this.radius === 'number' ? Math.min(this.radius, this.width / 2, this.height / 2) : this.radius\n        this.clear()\n        if (this.fillColor !== null) {\n          this.fillStyle(this.fillColor, this.fillAlpha)\n          this.fillRoundedRect(x, y, this.width, this.height, radius)\n        }\n        if (this.lineWidth && this.strokeColor !== null) {\n          this.lineStyle(this.lineWidth, this.strokeColor, this.strokeAlpha)\n          this.strokeRoundedRect(x, y, this.width, this.height, radius)\n        }\n      }\n      // Origin\n      get originX () {\n        return this._originX\n      }\n      set originX (v) {\n        this._originX = v\n        this.displayOriginX = this.width * v\n        this.setRenderFlag(true)\n      }\n      get originY () {\n        return this._originY\n      }\n      set originY (v) {\n        this._originY = v\n        this.displayOriginY = this.height * v\n        this.setRenderFlag(true)\n      }\n      setOrigin (x, y) {\n        this.originX = x\n        this.originY = y === undefined ? x : y\n        return this\n      }\n      // Radius\n      get radius () {\n        return this._radius\n      }\n      set radius (v) {\n        this._radius = v\n        this.setRenderFlag(true)\n      }\n      setRadius (radius) {\n        this.radius = radius\n        return this\n      }\n      // Size\n      get width () {\n        return this._width\n      }\n      set width (v) {\n        this._width = v\n        this.fixSize()\n        this.setRenderFlag(true)\n      }\n      get height () {\n        return this._height\n      }\n      set height (v) {\n        this._height = v\n        this.fixSize()\n        this.setRenderFlag(true)\n      }\n      setSize (width, height) {\n        if (width !== undefined) this.width = width\n        if (height !== undefined) this.height = height\n        return this\n      }\n      fixSize () {\n        if (this.input) this.input.hitArea.setSize(this.width, this.height)\n        if (this.body) this.body.setSize(this.width, this.height)\n      }\n      get displayWidth () {\n        return Math.abs(this.scaleX * this.width)\n      }\n      set displayWidth (value) {\n        this.scaleX = value / this.width\n      }\n      get displayHeight () {\n        return Math.abs(this.scaleY * this.height)\n      }\n      set displayHeight (value) {\n        this.scaleY = value / this.height\n      }\n      // Fill\n      get fillColor () {\n        return this._fillColor\n      }\n      set fillColor (v) {\n        this._fillColor = v\n        this.setRenderFlag(true)\n      }\n      get fillAlpha () {\n        return this._fillAlpha\n      }\n      set fillAlpha (v) {\n        this._fillAlpha = v\n        this.setRenderFlag(true)\n      }\n      setFillStyle (fillColor, fillAlpha) {\n        if (fillColor !== undefined) this.fillColor = fillColor\n        if (fillAlpha !== undefined) this.fillAlpha = fillAlpha\n        return this\n      }\n      // Stroke\n      get lineWidth () {\n        return this._lineWidth\n      }\n      set lineWidth (v) {\n        this._lineWidth = v\n        this.setRenderFlag(true)\n      }\n      get strokeColor () {\n        return this._strokeColor\n      }\n      set strokeColor (v) {\n        this._strokeColor = v\n        this.setRenderFlag(true)\n      }\n      get strokeAlpha () {\n        return this._strokeAlpha\n      }\n      set strokeAlpha (v) {\n        this._strokeAlpha = v\n        this.setRenderFlag(true)\n      }\n      setStrokeStyle (lineWidth, strokeColor, strokeAlpha) {\n        if (lineWidth !== undefined) this.lineWidth = lineWidth\n        if (strokeColor !== undefined) this.strokeColor = strokeColor\n        if (strokeAlpha !== undefined) this.strokeAlpha = strokeAlpha\n        return this\n      }\n    }\n    const object = new RoundRectangle(scene, props.x || 0, props.y || 0, props.width, props.height, props.radius)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'x1', 'y1', 'x2', 'y2', 'x3', 'y3',\n      'fillColor', 'fillAlpha',\n      'lineWidth', 'strokeColor', 'strokeAlpha'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Triangle(scene, props.x || 0, props.y || 0, props.x1, props.y1, props.x2, props.y2, props.x3, props.y3)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'radius',\n      'fillColor', 'fillAlpha',\n      'lineWidth', 'strokeColor', 'strokeAlpha'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Arc(scene, props.x || 0, props.y || 0, props.radius)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'points',\n      'fillColor', 'fillAlpha',\n      'lineWidth', 'strokeColor', 'strokeAlpha',\n      'points'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Polygon(scene, props.x || 0, props.y || 0, props.points)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'x1', 'y1', 'x2', 'y2',\n      'lineWidth', 'strokeColor', 'strokeAlpha'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Line(scene, props.x || 0, props.y || 0, props.x1, props.y1, props.x2, props.y2)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'texture', 'frame',\n      'tint',\n      'flipX', 'flipY'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Image(scene, props.x || 0, props.y || 0, props.texture)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'width', 'height',\n      'leftWidth', 'rightWidth', 'topHeight', 'bottomHeight',\n      'texture', 'frame', 'tint'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.NineSlice(scene, props.x || 0, props.y || 0, props.texture, props.frame, props.width, props.height, props.leftWidth, props.rightWidth, props.topHeight, props.bottomHeight)\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject, getCurrentInstance } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nconst SPRITE_EMITS = [\n  { attr: 'onAnimationstart', emit: 'animationstart' },\n  { attr: 'onAnimationupdate', emit: 'animationupdate' },\n  { attr: 'onAnimationrepeat', emit: 'animationrepeat' },\n  { attr: 'onAnimationcomplete', emit: 'animationcomplete' },\n  { attr: 'onAnimationstop', emit: 'animationstop' },\n  { attr: 'onAnimationrestart', emit: 'animationrestart' }\n]\nexport default defineComponent({\n  emits: [\n    ...gameObjectEmits,\n    ...SPRITE_EMITS.map(v => v.emit)\n  ],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'texture', 'frame',\n      'tint',\n      'flipX', 'flipY'\n    ),\n    play: { type: [String, Object] }\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Sprite(scene, props.x || 0, props.y || 0, props.texture)\n    const currentInstance = getCurrentInstance()\n    const definedProps = currentInstance.vnode.props || []\n    SPRITE_EMITS.filter(v => v.attr in definedProps).forEach(v => {\n      object.on(v.emit, (...args) => {\n        context.emit(v.emit, ...args)\n      })\n    })\n    initGameObject(object, props, context)\n    provide(InjectionKeys.GameObject, object)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'text',\n      'style', 'lineSpacing',\n      'padding'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Text(scene, props.x || 0, props.y || 0, props.text)\n    initGameObject(object, props, context)\n    return { object }\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { mapProps, gameObjectProps } from '../props.js'\nexport default defineComponent({\n  emits: ['create'],\n  props: {\n    ...gameObjectProps,\n    ...mapProps('width', 'height', 'collision', 'collisionByProperty'),\n    tilemap: { type: Object },\n    layerIndex: { type: Number },\n    tileset: { type: [Array, String] },\n    cullPadding: { type: Number },\n    cullPaddingX: { type: Number },\n    cullPaddingY: { type: Number }\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.Tilemaps.TilemapLayer(scene, props.tilemap, props.layerIndex, props.tileset, props.x || 0, props.y || 0)\n    initGameObject(object, props, context)\n    return { object }\n  }\n})\n</script>\n","<template>\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...Object.fromEntries(\n      Object.entries(gameObjectProps).filter(([k]) => !['alpha', 'blendMode', 'pipeline'].includes(k))\n    ),\n    ...mapProps('width', 'height')\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.Zone(scene, props.x || 0, props.y || 0, props.width, props.height)\n    initGameObject(object, props, context)\n    return { object }\n  }\n})\n</script>\n","<template>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { initGameObject } from '../index.js'\nimport { mapProps } from '../props.js'\nexport default defineComponent({\n  emits: ['create'],\n  props: {\n    ...mapProps(\n      'tween', 'tweens', 'timeline',\n      'visible',\n      'x', 'y',\n      'radius',\n      'color',\n      'intensity'\n    )\n  },\n  setup (props, context) {\n    const object = new Phaser.GameObjects.Light(props.x || 0, props.y || 0)\n    initGameObject(object, props, context)\n    return { object }\n  }\n})\n</script>\n","<template>\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { mapProps } from '../props.js'\nexport default defineComponent({\n  emits: ['create'],\n  props: {\n    ...mapProps(\n      'width', 'height',\n      'offsetX', 'offsetY',\n      'enable'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    if (!scene.physics) throw Error(\"Physics is not available. Add physics setting to your game config. e.g. `physics: { default: 'arcade' }`\")\n    const gameObject = inject(InjectionKeys.GameObject)\n    const body = scene.physics.add.existing(gameObject, Phaser.Physics.Arcade.STATIC_BODY).body\n    initGameObject(body, props, context)\n  }\n})\n</script>\n","<template>\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { mapProps } from '../props.js'\nexport default defineComponent({\n  emits: ['create'],\n  props: {\n    ...mapProps(\n      'width', 'height',\n      'offsetX', 'offsetY',\n      'enable',\n      'immovable', 'moves',\n      'bounceX', 'bounceY',\n      'drag', 'dragX', 'dragY',\n      'gravityX', 'gravityY',\n      'frictionX', 'frictionY',\n      'velocityX', 'velocityY',\n      'maxVelocityX', 'maxVelocityY',\n      'accelerationX', 'accelerationY',\n      'collideWorldBounds'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    if (!scene.physics) throw Error(\"Physics is not available. Add physics setting to your game config. e.g. `physics: { default: 'arcade' }`\")\n    const gameObject = inject(InjectionKeys.GameObject)\n    const body = scene.physics.add.existing(gameObject, Phaser.Physics.Arcade.DYNAMIC_BODY).body\n    initGameObject(body, props, context)\n  }\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script>\nimport { defineComponent, provide, inject, onUpdated, onMounted } from 'vue'\nimport { initGameObject, InjectionKeys } from '../index.js'\nimport { gameObjectProps, mapProps } from '../props.js'\nimport { gameObjectEmits } from '../emits.js'\nexport default defineComponent({\n  emits: [...gameObjectEmits],\n  props: {\n    ...gameObjectProps,\n    ...mapProps(\n      'width', 'height'\n    )\n  },\n  setup (props, context) {\n    const scene = inject(InjectionKeys.Scene)\n    const object = new Phaser.GameObjects.RenderTexture(scene, props.x || 0, props.y || 0, props.width, props.height)\n    initGameObject(object, props, context)\n    const renderList = []\n    provide(InjectionKeys.RenderTextureRenderList, renderList)\n    provide(InjectionKeys.GameObject, object)\n    const render = () => {\n      object.beginDraw()\n      renderList.forEach((v) => object.batchDraw(v))\n      object.endDraw()\n    }\n    onMounted(() => {\n      render()\n    })\n    onUpdated(() => {\n      object.clear()\n      render()\n    })\n    return { object }\n  }\n})\n</script>\n","import { inject, watch, onBeforeUnmount, customRef, getCurrentInstance } from 'vue'\nimport { default as setters, deepProps, vModelProps, GAME_OBJECT_EVENTS } from './setters.js'\nimport Game from './components/Game.vue'\nimport Scene from './components/Scene.vue'\nimport Container from './components/Container.vue'\nimport Rectangle from './components/Rectangle.vue'\nimport RoundRectangle from './components/RoundRectangle.vue'\nimport Triangle from './components/Triangle.vue'\nimport Circle from './components/Circle.vue'\nimport Polygon from './components/Polygon.vue'\nimport Line from './components/Line.vue'\nimport Image from './components/Image.vue'\nimport NineSlice from './components/NineSlice.vue'\nimport Sprite from './components/Sprite.vue'\nimport Text from './components/Text.vue'\nimport TilemapLayer from './components/TilemapLayer.vue'\nimport Zone from './components/Zone.vue'\nimport Light from './components/Light.vue'\nimport StaticBody from './components/StaticBody.vue'\nimport Body from './components/Body.vue'\nimport RenderTexture from './components/RenderTexture.vue'\n\nconst createPhavuerApp = () => {\n  console.error('Phavuer::createPhavuerApp() has been removed. Please use `<Game>` component instead. See: https://github.com/laineus/phavuer')\n}\n\nconst camelize = s => s.replace(/-./g, x => x[1].toUpperCase())\n\nconst initGameObject = (object, props, context) => {\n  const currentInstance = getCurrentInstance()\n  const isBody = 'bounce' in object\n  const isLight = object.constructor === Phaser.GameObjects.Light\n  const scene = inject(InjectionKeys.Scene)\n  const renderList = inject(InjectionKeys.RenderTextureRenderList)\n  if (isLight) {\n    if (!scene.lights.active) scene.lights.enable()\n    scene.lights.lights.push(object)\n  } else if (isBody) {\n    // _\n  } else if (renderList) {\n    renderList.push(object)\n    onBeforeUnmount(() => {\n      const i = renderList.findIndex(v => v === object)\n      renderList.splice(i, 1)\n    })\n  } else {\n    scene.add.existing(object)\n    // Append to parent container\n    const container = inject(InjectionKeys.Container)\n    if (container) {\n      const i = container.list.findIndex(v => v.depth > (props.depth ?? 0))\n      i === -1 ? container.add(object) : container.addAt(object, i)\n    }\n  }\n  // Make it reactive\n  const definedProps = Object.fromEntries(\n    Object.entries(currentInstance.vnode.props ?? {}).map(([key, value]) => [camelize(key), value])\n  )\n  const vModelKeys = Object.keys(definedProps).filter(key => key.startsWith('onUpdate:')).map(key => key.split(':')[1]).filter(key => vModelProps.includes(key))\n  const normalProps = Object.entries(definedProps).filter(([key]) => setters[key])\n  const watchStoppers = normalProps.map(([key, value]) => {\n    const setter = setters[key](object, vModelKeys.includes(key) ? context.emit : undefined)\n    setter(value)\n    // TODO: Don't watch non dynamicProps\n    return watch(() => props[key], setter, { deep: deepProps.includes(key) })\n  }).filter(Boolean)\n  // Set event\n  if (definedProps.onCreate) context.emit('create', object)\n  // Set interactive events\n  const events = GAME_OBJECT_EVENTS.filter(v => v.attr in definedProps)\n  if (events.length) {\n    if (!object.input) {\n      object.setInteractive()\n    }\n    if (events.some(v => v.drag)) {\n      scene.input.setDraggable(object)\n    }\n    events.forEach(v => {\n      object.on(v.emit, (...args) => {\n        if ('eventIndex' in v) {\n          args[0].stopPropagation = args[v.eventIndex].stopPropagation\n        }\n        context.emit(v.emit, ...args)\n      })\n    })\n  }\n  // Destroy when unmounted\n  onBeforeUnmount(() => {\n    if (object.tween) object.tween.stop()\n    watchStoppers.forEach(stop => stop())\n  })\n  if (isLight) {\n    onBeforeUnmount(() => scene.lights.removeLight(object))\n  } else {\n    onBeforeUnmount(() => object.destroy())\n  }\n  return object\n}\n\n// TODO: should be Symbol\nconst InjectionKeys = {\n  Game: 'phavuer_game',\n  Scene: 'phavuer_scene',\n  GameObject: 'phavuer_gameObject',\n  Container: 'phavuer_container',\n  RenderTextureRenderList: 'phavuer_renderTextureRenderList',\n  PreUpdateEvents: 'phavuer_preUpdateEvents',\n  PostUpdateEvents: 'phavuer_postUpdateEvents'\n}\n\nconst useInject = key => () => {\n  const obj = inject(key)\n  if (!obj) throw new Error(`${key} is not provided`)\n  return obj\n}\n\nconst useGame = useInject(InjectionKeys.Game)\nconst useScene = useInject(InjectionKeys.Scene)\n\nconst refTo = (value, key) => {\n  return customRef((track, trigger) => {\n    return {\n      get () {\n        track()\n        return value\n      },\n      set (newValue) {\n        if (value && newValue) return\n        value = newValue ? newValue[key] : null\n        trigger()\n      }\n    }\n  })\n}\nconst refObj = value => refTo(value, 'object')\nconst refScene = value => refTo(value, 'scene')\n\nconst getRegisterUpdateEvent = symbol => e => {\n  const eventList = inject(symbol)\n  eventList.push(e)\n  onBeforeUnmount(() => {\n    const i = eventList.findIndex(v => v === e)\n    eventList.splice(i, 1)\n  })\n}\nconst onPreUpdate = getRegisterUpdateEvent(InjectionKeys.PreUpdateEvents)\nconst onPostUpdate = getRegisterUpdateEvent(InjectionKeys.PostUpdateEvents)\n\nexport {\n  createPhavuerApp,\n  initGameObject,\n  refTo,\n  refObj,\n  refScene,\n  InjectionKeys,\n  useGame,\n  useScene,\n  onPreUpdate,\n  onPostUpdate,\n  Game,\n  Scene,\n  Container,\n  Rectangle,\n  RoundRectangle,\n  Triangle,\n  Circle,\n  Polygon,\n  Line,\n  Image,\n  NineSlice,\n  Sprite,\n  Text,\n  TilemapLayer,\n  Zone,\n  Light,\n  StaticBody,\n  Body,\n  RenderTexture\n}\n"],"names":["GAME_OBJECT_EVENTS","fixSize","object","v","defineVModelProperty","gameObject","key","emit","rawValue","deepProps","vModelProps","setters","i","start","end","body","makeTweenRepository","tweenConfig","tween","tweenConfigs","infinitConfigIndex","conf","configs","timeline","sum","config","duration","yoyo","count","timelineConfigs","timelineConfig","copiedTimelineConfig","callback","prevTween","data","_sfc_main","defineComponent","props","context","_a","packageJson","canvasRoot","ref","show","tmpParent","game","provide","InjectionKeys","onMounted","canvas","_hoisted_1","_openBlock","_createElementBlock","_createElementVNode","_hoisted_2","_ctx","_renderSlot","preUpdateEvents","postUpdateEvents","Scene","time","delta","e","scene","inject","propsEntries","mapProps","names","nameSet","name","gameObjectProps","emits","vModelEmits","gameObjectEmits","k","initGameObject","RoundRectangle","x","y","width","height","radius","arg","bool","value","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha","SPRITE_EMITS","definedProps","getCurrentInstance","args","renderList","render","onUpdated","createPhavuerApp","camelize","s","currentInstance","isBody","isLight","onBeforeUnmount","container","vModelKeys","watchStoppers","setter","watch","events","stop","useInject","obj","useGame","useScene","refTo","customRef","track","trigger","newValue","refObj","refScene","getRegisterUpdateEvent","symbol","eventList","onPreUpdate","onPostUpdate"],"mappings":"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"}