!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Vue")):"function"==typeof define&&define.amd?define(["Vue"],t):"object"==typeof exports?exports.Phavuer=t(require("Vue")):e.Phavuer=t(e.Vue)}(this,(function(e){return function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(t,i){t.exports=e},function(e,t,i){"use strict";i.r(t),i.d(t,"Scene",(function(){return y})),i.d(t,"Container",(function(){return j})),i.d(t,"Image",(function(){return O})),i.d(t,"Sprite",(function(){return m})),i.d(t,"Text",(function(){return x})),i.d(t,"Rectangle",(function(){return v})),i.d(t,"Circle",(function(){return k})),i.d(t,"DynamicTilemapLayer",(function(){return S})),i.d(t,"StaticTilemapLayer",(function(){return w})),i.d(t,"Zone",(function(){return C})),i.d(t,"RoundRectangle",(function(){return _})),i.d(t,"createPhavuerApp",(function(){return P})),i.d(t,"initGameObject",(function(){return A})),i.d(t,"refTo",(function(){return R})),i.d(t,"refObj",(function(){return X})),i.d(t,"refScene",(function(){return Y}));var r=i(0);var n={props:{name:{type:String,require:!0},autoStart:{type:Boolean,default:!0}},setup(e,t){const i=Object(r.ref)(!0),n=class extends Phaser.Scene{init(e){i.value=!0,t.emit("init",this,e)}create(e){t.emit("create",this,e)}update(e,i){t.emit("update",this,e,i)}preload(){t.emit("preload",this)}},s=Object(r.inject)("game").scene.add(e.name,n,e.autoStart);return s.events.on("shutdown",()=>i.value=!1),Object(r.provide)("scene",s),{scene:s,show:i}},render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div",null,[n.show?Object(r.renderSlot)(e.$slots,"default",{key:0}):Object(r.createCommentVNode)("v-if",!0)])}};var s={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Container{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i);return A(s,e,t),Object(r.provide)("container",s),{object:s}},props:["visible","width","height","rotation","x","y","depth","alpha"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div",null,[Object(r.renderSlot)(e.$slots,"default")])}};var o={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Rectangle{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.width,e.height);return A(s,e,t),{object:s}},props:["visible","x","y","rotation","width","height","origin","originX","originY","displayOriginX","displayOriginY","scale","scaleX","scaleY","depth","alpha","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var l={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Graphics{constructor(e,t,i,r,n,s){super(e,t,i,r,n),this._originX=0,this._originY=0,this._width=r||0,this._height=n||0,this._radius=s||0,this._fillColor=null,this._fillAlpha=1,this._lineWidth=0,this._strokeColor=null,this._strokeAlpha=1,this.setRenderFlag(!0)}preUpdate(...e){this.renderFlag&&this.render(),t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}setRenderFlag(e){this.renderFlag=e}render(){this.setRenderFlag(!1);const e=this.originX*-this.width,t=this.originY*-this.height;this.clear(),null!==this.fillColor&&(this.fillStyle(this.fillColor,this.fillAlpha),this.fillRoundedRect(e,t,this.width,this.height,this.radius)),this.lineWidth&&null!==this.strokeColor&&(this.lineStyle(this.lineWidth,this.strokeColor,this.strokeAlpha),this.strokeRoundedRect(e,t,this.width,this.height,this.radius))}get originX(){return this._originX}set originX(e){this._originX=e,this.setRenderFlag(!0)}get originY(){return this._originY}set originY(e){this._originY=e,this.setRenderFlag(!0)}setOrigin(e,t){return this.originX=e,this.originY=void 0===t?e:t,this}get radius(){return this._radius}set radius(e){return this._radius=e}setRadius(e){return this.radius=e,this}fixRadius(){"number"==typeof this.radius&&(this.radius=Math.min(this.radius,this.width.half,this.height.half))}get width(){return this._width}set width(e){this._width=e,this.fixRadius(),this.fixSize(),this.setRenderFlag(!0)}get height(){return this._height}set height(e){this._height=e,this.fixRadius(),this.fixSize(),this.setRenderFlag(!0)}setSize(e,t){return void 0!==e&&(this.width=e),void 0!==t&&(this.height=t),this}fixSize(){this.input&&this.input.hitArea.setSize(this.width,this.height),this.body&&this.body.setSize(this.width,this.height)}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor=e,this.setRenderFlag(!0)}get fillAlpha(){return this._fillAlpha}set fillAlpha(e){this._fillAlpha=e,this.setRenderFlag(!0)}setFillStyle(e,t){return void 0!==e&&(this.fillColor=e),void 0!==t&&(this.fillAlpha=t),this}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.setRenderFlag(!0)}get strokeColor(){return this._strokeColor}set strokeColor(e){this._strokeColor=e,this.setRenderFlag(!0)}get strokeAlpha(){return this._strokeAlpha}set strokeAlpha(e){this._strokeAlpha=e,this.setRenderFlag(!0)}setStrokeStyle(e,t,i){return void 0!==e&&(this.lineWidth=e),void 0!==t&&(this.strokeColor=t),void 0!==i&&(this.strokeAlpha=i),this}}const s=new n(i,e.x,e.y,e.width,e.height,e.radius);return A(s,e,t),{object:s}},props:["visible","x","y","rotation","width","height","origin","originX","originY","displayOriginX","displayOriginY","scale","scaleX","scaleY","depth","alpha","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha","radius"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var a={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Arc{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.radius);return A(s,e,t),{object:s}},props:["visible","x","y","rotation","radius","origin","originX","originY","displayOriginX","displayOriginY","scale","scaleX","scaleY","depth","alpha","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var c={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Image{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.texture);return A(s,e,t),{object:s}},props:["visible","x","y","rotation","origin","originX","originY","scale","scaleX","scaleY","depth","alpha","blendMode","texture","frame","flipX","flipY"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var h={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Sprite{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.texture);return A(s,e,t),{object:s}},props:["visible","x","y","rotation","origin","originX","originY","scale","scaleX","scaleY","depth","alpha","blendMode","texture","frame","flipX","flipY"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var d={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Text{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.text);return A(s,e,t),{object:s}},props:["visible","text","rotation","x","y","origin","originX","originY","scale","scaleX","scaleY","depth","alpha","style"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var p={props:["visible","x","y","width","height","depth","tilemap","layerIndex","tileset","collision"],setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.Tilemaps.DynamicTilemapLayer{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.tilemap,e.layerIndex,e.tileset,e.x,e.y);return A(s,e,t),{object:s}},render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var u={props:["visible","x","y","width","height","depth","tilemap","layerIndex","tileset","collision"],setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.Tilemaps.StaticTilemapLayer{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.tilemap,e.layerIndex,e.tileset,e.x,e.y);return A(s,e,t),{object:s}},render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}};var g={setup(e,t){const i=Object(r.inject)("scene");class n extends Phaser.GameObjects.Zone{preUpdate(...e){t.attrs.onPreUpdate&&t.emit("preUpdate",this,...e)}}const s=new n(i,e.x,e.y,e.width,e.height);return A(s,e,t),{object:s}},props:["active","x","y","width","height","origin","originX","originY"],render:function(e,t,i,n,s,o){return Object(r.openBlock)(),Object(r.createBlock)("div")}},f={Scene:n,Container:s,Rectangle:o,RoundRectangle:l,Circle:a,Image:c,Sprite:h,Text:d,DynamicTilemapLayer:p,StaticTilemapLayer:u,Zone:g},b={active:e=>t=>e.setActive(t),visible:e=>t=>e.setVisible(t),x:e=>t=>e.setPosition(t,e.y),y:e=>t=>e.setPosition(e.x,t),rotation:e=>t=>e.setRotation(t),origin:e=>t=>e.setOrigin(t,t),originX:e=>t=>e.setOrigin(t,e.originY),originY:e=>t=>e.setOrigin(e.originX,t),scale:e=>t=>e.setScale(t,t),scaleX:e=>t=>e.setScale(t,e.scaleY),scaleY:e=>t=>e.setScale(e.scaleX,t),width:e=>t=>{e.setSize(t,e.height),e.input&&e.input.hitArea.setSize(t,e.height),e.body&&e.body.setSize(t,e.height)},height:e=>t=>{e.setSize(e.width,t),e.input&&e.input.hitArea.setSize(e.width,t),e.body&&e.body.setSize(e.width,t)},radius:e=>t=>e.setRadius(t),displayWidth:e=>t=>e.setDisplaySize(t,e.displayHeight),displayHeight:e=>t=>e.setDisplaySize(e.displayWidth,t),displayOriginX:e=>t=>e.setDisplayOrigin(t,e.displayOriginY),displayOriginY:e=>t=>e.setDisplayOrigin(e.displayOriginX,t),flipX:e=>t=>e.setFlipX(t),flipY:e=>t=>e.setFlipY(t),depth:e=>t=>e.setDepth(t),alpha:e=>t=>e.setAlpha(t),blendMode:e=>t=>e.setBlendMode(t),tint:e=>t=>e.setTint(t),text:e=>t=>e.setText(t),texture:e=>t=>e.setTexture(t),frame:e=>t=>e.setFrame(t),fillColor:e=>t=>e.setFillStyle(t,e.fillAlpha),fillAlpha:e=>t=>e.setFillStyle(e.fillColor,t),lineWidth:e=>t=>e.setStrokeStyle(...t?[t,e.strokeColor,e.strokeAlpha]:[]),strokeColor:e=>t=>e.setStrokeStyle(e.lineWidth,t,e.strokeAlpha),strokeAlpha:e=>t=>e.setStrokeStyle(e.lineWidth,e.strokeColor,t),style:e=>t=>e.setStyle(t),collision:e=>t=>e.setCollision(t)};const y=f.Scene,j=f.Container,O=f.Image,m=f.Sprite,x=f.Text,v=f.Rectangle,k=f.Circle,S=f.DynamicTilemapLayer,w=f.StaticTilemapLayer,C=f.Zone,_=f.RoundRectangle,P=(e,t)=>{const i=Object(r.createApp)(t);i.provide("game",e),i.provide("scene",null),i.provide("container",null);const n=window.document.createElement("div");return document.body.appendChild(n),i.mount(n)},A=(e,t,i)=>{Object(r.inject)("scene").add.existing(e);const n=Object(r.inject)("container");return n&&n.add([e]),Object.keys(t).forEach(i=>{if(!b[i])return;const n=b[i](e);n(t[i]),Object(r.watch)(()=>t[i],n)}),i.attrs.onCreate&&i.emit("create",e),(i.attrs.onPointerdown||i.attrs.onPointerup)&&(e.setInteractive(),i.attrs.onPointerdown&&e.on("pointerdown",(...e)=>i.emit("pointerdown",...e)),i.attrs.onPointerup&&e.on("pointerup",(...e)=>i.emit("pointerup",...e))),Object(r.onBeforeUnmount)(()=>e.destroy()),e},R=(e,t)=>Object(r.customRef)((i,r)=>({get:()=>(i(),e),set(i){e&&i||(e=i?i[t]:null,r())}})),X=e=>R(e,"object"),Y=e=>R(e,"scene")}])}));