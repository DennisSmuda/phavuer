!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Vue")):"function"==typeof define&&define.amd?define(["Vue"],t):"object"==typeof exports?exports.Phavuer=t(require("Vue")):e.Phavuer=t(e.Vue)}(this,(e=>(()=>{"use strict";var t={744:(e,t)=>{t.Z=(e,t)=>{const i=e.__vccOpts||e;for(const[e,n]of t)i[e]=n;return i}},740:t=>{t.exports=e}},i={};function n(e){var r=i[e];if(void 0!==r)return r.exports;var o=i[e]={exports:{}};return t[e](o,o.exports,n),o.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{Body:()=>I,Circle:()=>S,Container:()=>m,Image:()=>k,InjectionKeys:()=>D,Light:()=>G,Line:()=>j,Rectangle:()=>f,RoundRectangle:()=>v,Scene:()=>p,Sprite:()=>X,StaticBody:()=>W,Text:()=>N,TilemapLayer:()=>_,Zone:()=>A,createPhavuerApp:()=>Z,initGameObject:()=>V,onPostUpdate:()=>J,onPreUpdate:()=>K,refObj:()=>z,refScene:()=>H,refTo:()=>M,useGame:()=>$,useScene:()=>L});var e=n(740);const t=["pointerdown","pointermove","pointerup","pointerout","wheel"],i=e=>{e.updateDisplayOrigin&&e.updateDisplayOrigin(),e.input?e.input.hitArea.setSize(e.width,e.height):e._events&&t.some((t=>t in e._events))&&e.setInteractive()},o=["tween","tweens","timeline","style"],s={active:e=>t=>e.setActive(t),visible:e=>t=>e.setVisible(t),x:e=>t=>e.x=t,_x:e=>t=>e._x=t,y:e=>t=>e.y=t,_y:e=>t=>e._y=t,x1:e=>t=>e.x1=t,y1:e=>t=>e.y1=t,x2:e=>t=>e.x2=t,y2:e=>t=>e.y2=t,rotation:e=>t=>e.setRotation(t),origin:e=>t=>e.setOrigin(t,t),originX:e=>t=>e.setOrigin(t,e.originY),originY:e=>t=>e.setOrigin(e.originX,t),scale:e=>t=>e.setScale(t,t),scaleX:e=>t=>e.setScale(t,e.scaleY),scaleY:e=>t=>e.setScale(e.scaleX,t),width:e=>t=>{e.setSize(t,e.height),i(e)},height:e=>t=>{e.setSize(e.width,t),i(e)},radius:e=>t=>e.setRadius(t),displayWidth:e=>t=>e.setDisplaySize(t,e.displayHeight),displayHeight:e=>t=>e.setDisplaySize(e.displayWidth,t),displayOriginX:e=>t=>e.setDisplayOrigin(t,e.displayOriginY),displayOriginY:e=>t=>e.setDisplayOrigin(e.displayOriginX,t),flipX:e=>t=>e.setFlipX(t),flipY:e=>t=>e.setFlipY(t),depth:e=>t=>e.setDepth(t),alpha:e=>t=>e.setAlpha(t),blendMode:e=>t=>e.setBlendMode(t),pipeline:e=>t=>e.setPipeline(t),intensity:e=>t=>e.setIntensity(t),tint:e=>t=>e.setTint(t),text:e=>t=>e.setText(t),texture:e=>t=>e.setTexture(t,e.frame&&e.frame.name),frame:e=>t=>e.setFrame(t),color:e=>t=>e.setColor(t),fillColor:e=>t=>e.setFillStyle(t,e.fillAlpha),fillAlpha:e=>t=>e.setFillStyle(e.fillColor,t),lineWidth:e=>(t,i)=>{e.setLineWidth?e.setLineWidth(t,i):e.setStrokeStyle(...t?[t,e.strokeColor,e.strokeAlpha]:[])},strokeColor:e=>t=>e.setStrokeStyle(e.lineWidth,t,e.strokeAlpha),strokeAlpha:e=>t=>e.setStrokeStyle(e.lineWidth,e.strokeColor,t),style:e=>t=>e.setStyle(t),lineSpacing:e=>t=>e.setLineSpacing(t),padding:e=>t=>e.setPadding(t),collision:e=>t=>e.setCollision(t),collisionByProperty:e=>t=>e.setCollisionByProperty(t),enable:e=>t=>e.enable=t,immovable:e=>t=>e.setImmovable(t),moves:e=>t=>e.moves=t,bounceX:e=>t=>e.setBounceX(t),bounceY:e=>t=>e.setBounceY(t),drag:e=>t=>e.setDrag(t),dragX:e=>t=>e.setDragX(t),dragY:e=>t=>e.setDragY(t),gravityX:e=>t=>e.setGravityX(t),gravityY:e=>t=>e.setGravityY(t),frictionX:e=>t=>e.setFrictionX(t),frictionY:e=>t=>e.setFrictionY(t),velocityX:e=>t=>e.setVelocityX(t),velocityY:e=>t=>e.setVelocityY(t),maxVelocityX:e=>t=>e.setMaxVelocityX(t),maxVelocityY:e=>t=>e.setMaxVelocityY(t),accelerationX:e=>t=>e.setAccelerationX(t),accelerationY:e=>t=>e.setAccelerationY(t),offsetX:e=>t=>e.setOffset(t,e.offset.y),offsetY:e=>t=>e.setOffset(e.offset.x,t),tween:e=>t=>{e.tween&&e.tween.stop(),t&&(e.tween=e.scene.add.tween(Object.assign({targets:e},t)))},tweens:e=>t=>{e.tween&&e.tween.stop(),t&&(e.tween=e.scene.tweens.timeline({targets:e,tweens:t}))},timeline:e=>t=>{e.tween&&e.tween.stop(),t&&(e.tween=e.scene.tweens.timeline(Object.assign({targets:e},t)))}},l=(0,e.defineComponent)({props:{name:{type:String,required:!0},autoStart:{type:Boolean,default:!0}},setup(t,i){const n=(0,e.ref)(!1),r=[],o=[],s=class extends Phaser.Scene{init(e){i.emit("init",this,e)}create(e){n.value=!0,i.emit("create",this,e)}update(e,t){r.forEach((i=>i(e,t))),i.emit("update",this,e,t),o.forEach((i=>i(e,t)))}preload(){i.emit("preload",this)}},l=(0,e.inject)(D.Game).scene.add(t.name,s,t.autoStart);return l.events.on("shutdown",(()=>n.value=!1)),(0,e.provide)(D.Scene,l),(0,e.provide)(D.PreUpdateEvents,r),(0,e.provide)(D.PostUpdateEvents,o),{scene:l,show:n}}});var a=n(744);const p=(0,a.Z)(l,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[t.show?(0,e.renderSlot)(t.$slots,"default",{key:0}):(0,e.createCommentVNode)("v-if",!0)])}]]),h={active:{type:Boolean},visible:{type:Boolean},x:{type:Number},y:{type:Number},x1:{type:Number},y1:{type:Number},x2:{type:Number},y2:{type:Number},rotation:{type:Number},origin:{type:Number},originX:{type:Number},originY:{type:Number},scale:{type:Number},scaleX:{type:Number},scaleY:{type:Number},width:{type:Number},height:{type:Number},radius:{type:Number},displayWidth:{type:Number},displayHeight:{type:Number},displayOriginX:{type:Number},displayOriginY:{type:Number},flipX:{type:Boolean},flipY:{type:Boolean},depth:{type:Number},alpha:{type:Number},blendMode:{type:[Number,String]},pipeline:{type:[String,Object]},intensity:{type:Number},tint:{type:Number},text:{type:[String,Number]},texture:{type:String},frame:{type:[Number,String]},color:{type:String},fillColor:{type:Number},fillAlpha:{type:Number},lineWidth:{type:Number},strokeColor:{type:Number},strokeAlpha:{type:Number},style:{type:Object},lineSpacing:{type:Number},padding:{type:[Number,Object]},collision:{type:[Number,Array]},collisionByProperty:{type:Object},enable:{type:Boolean},immovable:{type:Boolean},moves:{type:Boolean},bounceX:{type:Number},bounceY:{type:Number},drag:{type:Number},dragX:{type:Number},dragY:{type:Number},gravityX:{type:Number},gravityY:{type:Number},frictionX:{type:Number},frictionY:{type:Number},velocityX:{type:Number},velocityY:{type:Number},maxVelocityX:{type:Number},maxVelocityY:{type:Number},accelerationX:{type:Number},accelerationY:{type:Number},offsetX:{type:Number},offsetY:{type:Number},tween:{type:Object},tweens:{type:Array},timeline:{type:Object}},c=Object.entries(h),d=(...e)=>{const t=new Set(e);return Object.fromEntries(c.filter((([e])=>t.has(e))))},u=d("tween","tweens","timeline","visible","x","y","rotation","origin","originX","originY","displayOriginX","displayOriginY","scale","scaleX","scaleY","displayWidth","displayHeight","depth","alpha","blendMode","pipeline"),y=(0,e.defineComponent)({props:{...u},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Container(n,t.x||0,t.y||0);return V(r,t,i),(0,e.provide)(D.Container,r),(0,e.provide)(D.GameObject,r),{object:r}}}),m=(0,a.Z)(y,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),g=(0,e.defineComponent)({props:{...u,...d("width","height","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Rectangle(n,t.x||0,t.y||0,t.width,t.height);return V(r,t,i),(0,e.provide)(D.GameObject,r),{object:r}}}),f=(0,a.Z)(g,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),b=(0,e.defineComponent)({props:{...u,...d("width","height","radius","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const n=(0,e.inject)(D.Scene);class r extends Phaser.GameObjects.Graphics{constructor(e,t,i,n,r,o){super(e,t,i,n,r),this._originX=0,this._originY=0,this._width=n||0,this._height=r||0,this._radius=o||0,this._fillColor=null,this._fillAlpha=1,this._lineWidth=0,this._strokeColor=null,this._strokeAlpha=1,this.setRenderFlag(!0)}preUpdate(...e){this.renderFlag&&this.render()}setRenderFlag(e){this.renderFlag=e}render(){this.setRenderFlag(!1);const e=this.originX*-this.width,t=this.originY*-this.height,i="number"==typeof this.radius?Math.min(this.radius,this.width.half,this.height.half):this.radius;this.clear(),null!==this.fillColor&&(this.fillStyle(this.fillColor,this.fillAlpha),this.fillRoundedRect(e,t,this.width,this.height,i)),this.lineWidth&&null!==this.strokeColor&&(this.lineStyle(this.lineWidth,this.strokeColor,this.strokeAlpha),this.strokeRoundedRect(e,t,this.width,this.height,i))}get originX(){return this._originX}set originX(e){this._originX=e,this.displayOriginX=this.width*e,this.setRenderFlag(!0)}get originY(){return this._originY}set originY(e){this._originY=e,this.displayOriginY=this.height*e,this.setRenderFlag(!0)}setOrigin(e,t){return this.originX=e,this.originY=void 0===t?e:t,this}get radius(){return this._radius}set radius(e){this._radius=e,this.setRenderFlag(!0)}setRadius(e){return this.radius=e,this}get width(){return this._width}set width(e){this._width=e,this.fixSize(),this.setRenderFlag(!0)}get height(){return this._height}set height(e){this._height=e,this.fixSize(),this.setRenderFlag(!0)}setSize(e,t){return void 0!==e&&(this.width=e),void 0!==t&&(this.height=t),this}fixSize(){this.input&&this.input.hitArea.setSize(this.width,this.height),this.body&&this.body.setSize(this.width,this.height)}get displayWidth(){return Math.abs(this.scaleX*this.width)}set displayWidth(e){this.scaleX=e/this.width}get displayHeight(){return Math.abs(this.scaleY*this.height)}set displayHeight(e){this.scaleY=e/this.height}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor=e,this.setRenderFlag(!0)}get fillAlpha(){return this._fillAlpha}set fillAlpha(e){this._fillAlpha=e,this.setRenderFlag(!0)}setFillStyle(e,t){return void 0!==e&&(this.fillColor=e),void 0!==t&&(this.fillAlpha=t),this}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.setRenderFlag(!0)}get strokeColor(){return this._strokeColor}set strokeColor(e){this._strokeColor=e,this.setRenderFlag(!0)}get strokeAlpha(){return this._strokeAlpha}set strokeAlpha(e){this._strokeAlpha=e,this.setRenderFlag(!0)}setStrokeStyle(e,t,i){return void 0!==e&&(this.lineWidth=e),void 0!==t&&(this.strokeColor=t),void 0!==i&&(this.strokeAlpha=i),this}}const o=new r(n,t.x||0,t.y||0,t.width,t.height,t.radius);return V(o,t,i),(0,e.provide)(D.GameObject,o),{object:o}}}),v=(0,a.Z)(b,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),w=(0,e.defineComponent)({props:{...u,...d("radius","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Arc(n,t.x||0,t.y||0,t.radius);return V(r,t,i),(0,e.provide)(D.GameObject,r),{object:r}}}),S=(0,a.Z)(w,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),x=(0,e.defineComponent)({props:{...u,...d("x1","y1","x2","y2","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Line(n,t.x||0,t.y||0,t.x1,t.y1,t.x2,t.y2);return V(r,t,i),(0,e.provide)(D.GameObject,r),{object:r}}}),j=(0,a.Z)(x,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),O=(0,e.defineComponent)({props:{...u,...d("texture","frame","tint","flipX","flipY")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Image(n,t.x||0,t.y||0,t.texture);return V(r,t,i),(0,e.provide)(D.GameObject,r),{object:r}}}),k=(0,a.Z)(O,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),Y=(0,e.defineComponent)({props:{...u,...d("texture","frame","tint","flipX","flipY")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Sprite(n,t.x||0,t.y||0,t.texture);return V(r,t,i),(0,e.provide)(D.GameObject,r),{object:r}}}),X=(0,a.Z)(Y,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",null,[(0,e.renderSlot)(t.$slots,"default")])}]]),C=(0,e.defineComponent)({props:{...u,...d("text","style","lineSpacing","padding")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Text(n,t.x||0,t.y||0,t.text);return V(r,t,i),{object:r}}}),N=(0,a.Z)(C,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),B=(0,e.defineComponent)({props:{...d("tween","tweens","timeline","visible","x","y","width","height","depth","pipeline","collision","collisionByProperty"),tilemap:{type:Object},layerIndex:{type:Number},tileset:{type:[Array,String]}},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.Tilemaps.TilemapLayer(n,t.tilemap,t.layerIndex,t.tileset,t.x||0,t.y||0);return V(r,t,i),{object:r}}}),_=(0,a.Z)(B,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),P=(0,e.defineComponent)({props:{...d("tween","tweens","timeline","active","x","y","width","height","origin","originX","originY","displayOriginX","displayOriginY")},setup(t,i){const n=(0,e.inject)(D.Scene),r=new Phaser.GameObjects.Zone(n,t.x||0,t.y||0,t.width,t.height);return V(r,t,i),{object:r}}}),A=(0,a.Z)(P,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),E=(0,e.defineComponent)({props:{...d("tween","tweens","timeline","visible","x","y","radius","color","intensity")},setup(e,t){const i=new Phaser.GameObjects.Light(e.x||0,e.y||0);return V(i,e,t),{object:i}}}),G=(0,a.Z)(E,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),R=(0,e.defineComponent)({props:{...d("width","height","offsetX","offsetY","enable")},setup(t,i){const n=(0,e.inject)(D.Scene),r=(0,e.inject)(D.GameObject),o=n.physics.add.existing(r,Phaser.Physics.Arcade.STATIC_BODY).body;V(o,t,i)}}),W=(0,a.Z)(R,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),F=(0,e.defineComponent)({props:{...d("width","height","offsetX","offsetY","enable","immovable","moves","bounceX","bounceY","drag","dragX","dragY","gravityX","gravityY","frictionX","frictionY","velocityX","velocityY","maxVelocityX","maxVelocityY","accelerationX","accelerationY")},setup(t,i){const n=(0,e.inject)(D.Scene),r=(0,e.inject)(D.GameObject),o=n.physics.add.existing(r,Phaser.Physics.Arcade.DYNAMIC_BODY).body;V(o,t,i)}}),I=(0,a.Z)(F,[["render",function(t,i,n,r,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div")}]]),Z=(e,t)=>{t.provide(D.Game,e),t.provide(D.Scene,null),t.provide(D.Container,null);const i=()=>{const e=window.document.createElement("div");return document.body.appendChild(e),t.mount(e)};return new Promise((t=>{if(e.isRunning)return t(i());e.events.addListener("ready",(()=>{t(i())}))}))},U=(e,t,i)=>{const n=`_${t}`,r=`update:${t}`;e[n]=e[t],Object.defineProperty(e,t,{get(){return this[n]},set(e){this[n]!==e&&i(r,e)}})},V=(t,i,n)=>{const r=(0,e.getCurrentInstance)(),l="bounce"in t,a=t.constructor===Phaser.GameObjects.Light,p=(0,e.inject)(D.Scene);if(a)p.lights.active||p.lights.enable(),p.lights.lights.push(t);else if(l);else{p.add.existing(t);const i=(0,e.inject)(D.Container);i&&i.add([t])}const h=r.vnode.props||[],c=Object.keys(h).filter((e=>e.startsWith("onUpdate:"))).map((e=>e.split(":")[1])).filter((e=>s[`_${e}`]));c.forEach((e=>U(t,e,n.emit)));const d=Object.entries(h).filter((([e])=>s[e])).map((([n,r])=>{const l=c.includes(n)?`_${n}`:n,a=s[l](t);return a(r),(0,e.watch)((()=>i[n]),a,{deep:o.includes(n)})})).filter(Boolean);n.attrs.onCreate&&n.emit("create",t);const u=[{attr:"onPointerdown",emit:"pointerdown",eventIndex:3},{attr:"onPointermove",emit:"pointermove",eventIndex:3},{attr:"onPointerup",emit:"pointerup",eventIndex:3},{attr:"onPointerout",emit:"pointerout",eventIndex:1},{attr:"onWheel",emit:"wheel",eventIndex:4}].filter((e=>e.attr in n.attrs));return u.length&&(t.setInteractive(),u.forEach((e=>{t.on(e.emit,((...t)=>{t[0].stopPropagation=t[e.eventIndex].stopPropagation,n.emit(e.emit,...t)}))}))),(0,e.onBeforeUnmount)((()=>{t.tween&&t.tween.stop(),d.forEach((e=>e()))})),a?(0,e.onBeforeUnmount)((()=>p.lights.removeLight(t))):(0,e.onBeforeUnmount)((()=>t.destroy())),t},D={Game:"phavuer_game",Scene:"phavuer_scene",GameObject:"phavuer_gameObject",Container:"phavuer_container",PreUpdateEvents:"phavuer_preUpdateEvents",PostUpdateEvents:"phavuer_postUpdateEvents"},T=t=>()=>{const i=(0,e.inject)(t);if(!i)throw new Error(`${t.description} is not provided`);return i},$=T(D.Game),L=T(D.Scene),M=(t,i)=>(0,e.customRef)(((e,n)=>({get:()=>(e(),t),set(e){t&&e||(t=e?e[i]:null,n())}}))),z=e=>M(e,"object"),H=e=>M(e,"scene"),q=t=>i=>{const n=(0,e.inject)(t);n.push(i),(0,e.onBeforeUnmount)((()=>{const e=n.findIndex((e=>e===i));n.splice(e,1)}))},K=q(D.PreUpdateEvents),J=q(D.PostUpdateEvents)})(),r})()));